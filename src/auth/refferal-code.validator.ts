import { PrismaService } from '@/../prisma/prisma.service'
import {
	registerDecorator,
	ValidationArguments,
	ValidationOptions,
} from 'class-validator'

export function IsValidReferralCode(validationOptions?: ValidationOptions) {
	return function (object: Object, propertyName: string) {
		registerDecorator({
			name: 'isValidReferralCode',
			target: object.constructor,
			propertyName: propertyName,
			options: validationOptions,
			validator: {
				async validate(value: any, args: ValidationArguments) {
					if (!value) return true // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω

					console.log(`üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: ${value}`)

					// –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ PrismaService —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
					const prisma = (global as any).prismaInstance as PrismaService
					if (!prisma) {
						console.log(`‚ùå PrismaService –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`)
						return false // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Prisma
					}

					// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ (8 —Å–∏–º–≤–æ–ª–æ–≤, –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
					const formatRegex = /^[a-zA-Z0-9]{8}$/
					if (!formatRegex.test(value)) {
						console.log(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: ${value}`)
						return false
					}

					// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º
					const user = await prisma.user.findUnique({
						where: { referralCode: value },
						select: { telegramId: true, status: true },
					})

					console.log(`üîç –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∫–æ–¥–æ–º ${value}:`, user)

					// –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
					const isValid = !!user && user.status !== 'Blocked'
					console.log(`‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ${value} –≤–∞–ª–∏–¥–µ–Ω: ${isValid}`)

					return isValid
				},
				defaultMessage(args: ValidationArguments) {
					return `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é`
				},
			},
		})
	}
}
